name: Publish to PyPI & Deploy to github.io

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m pip install twine
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5          

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Build Python package
        run: python -m build
  
      - name: Check package validity
        run: twine check dist/*

      - name: Publish to TestPyPI
        env:
          TEST_PYPI_API_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          pip install twine
          twine upload --repository testpypi dist/* \
              --username __token__ \
              --password "$TEST_PYPI_API_TOKEN"

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install MkDocs
        run: pip install mkdocs mkdocs-material

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Prepare cache
        run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - name: Cache for mkdocs
        uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Sync docs with uv
        run: uv sync --no-group dev --group docs --active

      - name: Deploy mkdocs to GitHub Pages
        run: mkdocs gh-deploy --config-file ./mkdocs.yml --force
